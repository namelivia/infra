---
- hosts: all
  become: true
  vars_files:
    - /vars/variables.yml
  roles:
    - role: ansible-common
      vars:
        - encryption_key_path: "{{ backup_encryption_key_path }}"
        - aws_access_key_id: "{{ backup_aws_access_key_id }}"
        - aws_secret_access_key: "{{ backup_aws_secret_access_key }}"

- hosts: digitalocean
  become: true
  vars_files:
    - /vars/variables.yml
  roles:
    - role: ansible-reverse-proxy
      vars:
        # READ: https://ghost.org/docs/faq/proxying-https-infinite-loops/
        - proto_override: "https"
    - role: ansible-openvpn-client
      vars:
        - vpn_endpoint: "{{ openvpn2_domain_name }}"
        - client_private_key: "{{ lookup('file', '/vars/digitalocean.key') }}"
        - openvpn_static_key: "{{ lookup('file', '/vars/server.key') }}"
        - client_certificate: "{{ lookup('file', '/vars/digitalocean.crt') }}"
        - server_ca: "{{ lookup('file', '/vars/server.crt') }}"
    - role: ansible-like-and-share-twitter-bot
      vars:
        - consumer_key: "{{ like_bot_consumer_key }}"
        - consumer_secret: "{{ like_bot_consumer_secret }}"
        - access_token_key: "{{ like_bot_access_token_key }}"
        - access_token_secret: "{{ like_bot_access_token_secret }}"
        - idle_period: "{{ like_bot_idle_period }}"
        - sentry_url: "{{ python_sentry_url }}"
    - role: ansible-movie-quote-twitter-bot
      vars:
        - twitter_consumer_key: "{{ movie_bot_twitter_consumer_key }}"
        - twitter_consumer_secret: "{{ movie_bot_twitter_consumer_secret }}"
        - twitter_access_token_key: "{{ movie_bot_twitter_access_token_key }}"
        - twitter_access_token_secret: "{{ movie_bot_twitter_access_token_secret }}"
        - mastodon_client_id: "{{ movie_bot_mastodon_client_id }}"
        - mastodon_client_secret: "{{ movie_bot_mastodon_client_secret }}"
        - mastodon_api_base_url: "{{ movie_bot_mastodon_api_base_url }}"
        - mastodon_login: "{{ movie_bot_mastodon_login }}"
        - mastodon_password: "{{ movie_bot_mastodon_password }}"
        - idle_period: "{{ movie_bot_idle_period }}"
        - sentry_url: "{{ python_sentry_url }}"
    - role: ansible-ghost
      vars:
        - domain_name: "{{ ghost_domain_name }}"
        - database_name: "{{ ghost_database_name }}"
        - database_user: "{{ ghost_database_user }}"
        - database_password: "{{ ghost_database_password }}"
        - dump_day: 2
        - backup_day: 4
        - mysql_root_password: "{{ghost_mysql_root_password}}"

- hosts: raspberry
  become: true
  vars_files:
    - /vars/variables.yml
  roles:

    - role: ansible-reverse-proxy
      vars:
        - client_max_body_size: "100mb"

    - role: ansible-openvpn-client
      vars:
        - vpn_endpoint: "{{ openvpn2_domain_name }}"
        - client_private_key: "{{ lookup('file', '/vars/nextcloud.key') }}"
        - openvpn_static_key: "{{ lookup('file', '/vars/server.key') }}"
        - client_certificate: "{{ lookup('file', '/vars/nextcloud.crt') }}"
        - server_ca: "{{ lookup('file', '/vars/server.crt') }}"

    - role: ansible-nextcloud
      vars:
        - app_container_name: nextcloud-app
        - domain_name: "{{ nextcloud_domain_name }}"
        - database_container_name: nextcloud-database
        - database_name: "{{ nextcloud_database_name }}"
        - database_user: "{{ nextcloud_database_user }}"
        - database_password: "{{ nextcloud_database_password }}"
        - mysql_root_password: "{{ nextcloud_mysql_root_password }}"
        - trusted_domains: "{{ nextcloud_domain_name }}"
        - admin_user: "{{ nextcloud_admin_user }}"
        - admin_password: "{{ nextcloud_admin_password }}"
        - dump_day: 2
        - backup_day: 4

    - role: ansible-samba-mounts
      vars:
        - gid: "{{ samba_gid }}"
        - uid: "{{ samba_uid }}"
        - samba_mounts: "{{ nextcloud_samba_mounts }}"

- hosts: azure
  become: true
  vars_files:
    - /vars/variables.yml
  roles:
    - role: ansible-reverse-proxy
    - role: ansible-openvpn-client
      vars:
        - vpn_endpoint: "{{ openvpn2_domain_name }}"
        - client_private_key: "{{ lookup('file', '/vars/azure.key') }}"
        - openvpn_static_key: "{{ lookup('file', '/vars/server.key') }}"
        - client_certificate: "{{ lookup('file', '/vars/azure.crt') }}"
        - server_ca: "{{ lookup('file', '/vars/server.crt') }}"
    - role: ansible-kimai
      vars:
        - domain_name: "{{ kimai_domain_name }}"
        - database_name: "{{ kimai_database_name }}"
        - database_user: "{{ kimai_database_user }}"
        - database_password: "{{ kimai_database_password }}"
        - dump_day: 4
        - backup_day: 5
        - admin_mail: "{{ kimai_admin_mail }}"
        - admin_pass: "{{ kimai_admin_pass }}"
        - mysql_root_password: "{{ kimai_mysql_root_password }}"
    - role: ansible-anki
      vars:
        - domain_name: "{{ anki_domain_name }}"
    - role: ansible-gallery-client
      vars:
        - domain_name: "{{ gallery_client_2_domain_name }}"
        - gallery_api_endpoint: "{{ gallery_api_endpoint_2 }}"
    - role: ansible-gallery-server
      vars:
        - domain_name: "{{ gallery_server_2_domain_name }}"
        - aws_blucket: "{{ aws_bucket_gallery_server_2 }}"
        - subpath: "{{ gallery_server_2_subpath }}"
    - role: ansible-mealie
      vars:
        - domain_name: "{{ mealie_domain_name }}"
    - role: ansible-humancoop
      vars:
        - domain_name: "{{ humancoop_domain_name }}"
    - role: ansible-humancoop-backend
      vars:
        - domain_name: "{{ humancoop_backend_domain_name }}"
        - aws_access_key_id: "{{ humancoop_aws_access_key_id }}"
        - aws_secret_access_key: "{{ humancoop_aws_secret_access_key }}"
    - role: ansible-flappysonic
      vars:
        - domain_name: "{{ flappysonic_domain_name }}"
    - role: ansible-nightcityride
      vars:
        - domain_name: "{{ nightcityride_domain_name }}"
    - role: ansible-thumbor
      vars:
        - domain_name: "{{ thumbor_domain_name }}"
    - role: ansible-tombraiderjs
      vars:
        - domain_name: "{{ tombraiderjs_domain_name }}"
    - role: ansible-pleroma
      vars:
        - domain_name: "{{ pleroma_domain_name }}"
        - docker_network_name: "{{ pleroma_network_name }}"
        - instance_name: "{{ pleroma_instance_name }}"
        - admin_mail: "{{ pleroma_admin_mail }}"
        - notify_mail: "{{ pleroma_notify_mail }}"
        - db_user: "{{ pleroma_db_user }}"
        - db_pass: "{{ pleroma_db_pass }}"
        - db_name: "{{ pleroma_db_name }}"
        - pleroma_config_path: "/vars/pleroma_config.exs"
        - database_container_name: "{{ pleroma_database_container_name }}"
        - database_name: "{{ pleroma_db_name }}"

- hosts: lightsail
  become: true
  vars_files:
    - /vars/variables.yml
  roles:
    - role: ansible-reverse-proxy
    - role: ansible-openvpn-client
      vars:
        - vpn_endpoint: "{{ openvpn2_domain_name }}"
        - client_private_key: "{{ lookup('file', '/vars/lightsail.key') }}"
        - openvpn_static_key: "{{ lookup('file', '/vars/server.key') }}"
        - client_certificate: "{{ lookup('file', '/vars/lightsail.crt') }}"
        - server_ca: "{{ lookup('file', '/vars/server.crt') }}"
    - role: ansible-gallery-client
      vars:
        - domain_name: "{{ gallery_client_domain_name }}"
    - role: ansible-gallery-server
      vars:
        - domain_name: "{{ gallery_server_domain_name }}"
        - subpath: "{{ gallery_server_subpath }}"
    - ansible-ofelia
    - role: ansible-plants-client
      vars:
        - domain_name: "{{ plants_client_domain_name }}"
    - role: ansible-postgres
      vars:
        - database_container_name: "{{ postgres_database_container_name }}"
    - role: ansible-garments-client
      vars:
        - domain_name: "{{ garments_client_domain_name }}"
    - role: ansible-itemtree-client
      vars:
        - domain_name: "{{ itemtree_client_domain_name }}"
    - role: ansible-expenses-client
      vars:
        - domain_name: "{{ expenses_client_domain_name }}"
    - role: ansible-garments-server
      vars:
        - database_url: "{{ garments_database_url }}"
        - database_container_name: "{{ garments_database_container_name }}"
        - database_name: "{{ garments_database_name }}"
        - domain_name: "{{ garments_server_domain_name }}"
        - subpath: "{{ garments_server_subpath }}"
        - database_user: "{{ garments_database_user }}"
        - database_password: "{{ garments_database_password }}"
        - dump_day: 4
    - role: ansible-plants-server
      vars:
        - database_url: "{{ plants_database_url }}"
        - domain_name: "{{ plants_server_domain_name }}"
        - database_container_name: "{{ plants_database_container_name }}"
        - subpath: "{{ plants_server_subpath }}"
        - database_name: "{{ plants_database_name }}"
        - database_user: "{{ plants_database_user }}"
        - database_password: "{{ plants_database_password }}"
        - dump_day: 3
    - role: ansible-miniflux
      vars:
        - database_url: "{{ miniflux_database_url }}"
        - domain_name: "{{ miniflux_domain_name }}"
        - database_container_name: "{{ miniflux_database_container_name }}"
        - database_name: "{{ miniflux_database_name }}"
        - database_user: "{{ miniflux_database_user }}"
        - database_password: "{{ miniflux_database_password }}"
        - admin_username: "{{ miniflux_admin_username }}"
        - admin_password: "{{ miniflux_admin_password }}"
        - dump_day: 4
    - role: ansible-itemtree-server
      vars:
        - database_url: "{{ itemtree_database_url }}"
        - domain_name: "{{ itemtree_server_domain_name }}"
        - subpath: "{{ itemtree_server_subpath }}"
        - database_container_name: "{{ itemtree_database_container_name }}"
        - database_name: "{{ itemtree_database_name }}"
        - database_user: "{{ itemtree_database_user }}"
        - database_password: "{{ itemtree_database_password }}"
        - dump_day: 3
    - role: ansible-expenses-server
      vars:
        - database_url: "{{ expenses_database_url }}"
        - domain_name: "{{ expenses_server_domain_name }}"
        - database_container_name: "{{ expenses_database_container_name }}"
        - subpath: "{{ expenses_server_subpath }}"
        - database_name: "{{ expenses_database_name }}"
        - database_user: "{{ expenses_database_user }}"
        - database_password: "{{ expenses_database_password }}"
        - dump_day: 5
    - role: ansible-gtd-caldav
      vars:
        - caldav_url: "{{ caldav_endpoint_url }}"
        - username: "{{ caldav_username }}"
        - password: "{{ caldav_password }}"
    - ansible-notifications-service
    - role: ansible-journaling-service
      vars:
        - database_url: "{{ journaling_database_url }}"
        - database_container_name: "{{ journaling_database_container_name }}"
        - database_name: "{{ journaling_database_name }}"
        - database_user: "{{ journaling_database_user }}"
        - database_password: "{{ journaling_database_password }}"
        - dump_day: 4
    - role: ansible-user-info-service
      vars:
        - database_url: "{{ users_database_url }}"
        - jwk_endpoint: "{{ pomerium_jwk_endpoint }}"
        - database_container_name: "{{ users_database_container_name }}"
        - database_name: "{{ users_database_name }}"
        - database_user: "{{ users_database_user }}"
        - database_password: "{{ users_database_password }}"
        - dump_day: 2
    - role: ansible-thumbor2
      vars:
        - backup_day: 3

- hosts: bastion
  become: true
  vars_files:
    - /vars/variables.yml
  roles:
    - role: ansible-pomerium
      vars:
        - application_name: "pomerium"
        - pomerium_config_path: "/vars/pomerium_config.yaml"
    - role: ansible-openvpn-server
      vars:
        - application_name: "openvpn2"
        - openvpn_config_folder: /vars/openvpn
        - domain_name: "{{ openvpn2_domain_name }}"

- hosts: seedbox
  become: true
  vars_files:
    - /vars/variables.yml
  roles:
    - ansible-external-storage
    - role: ansible-deluge
      vars:
        - deluge_downloads_folder: "{{ downloads_folder }}"
        - deluge_movies_folder: "{{ movies_folder }}"
        - deluge_tv_folder: "{{ tv_folder }}"
    - role: ansible-samba
      vars:
        - home_username: "{{ samba_host_home_username }}"
    - ansible-jackett
    - role: ansible-sonarr
      vars:
        - sonarr_downloads_folder: "{{ downloads_folder }}"
        - sonarr_tv_folder: "{{ tv_folder }}"
    - role: ansible-radarr
      vars:
        - radarr_downloads_folder: "{{ downloads_folder }}"
        - radarr_movies_folder: "{{ movies_folder }}"
    - role: ansible-bazarr
      vars:
        - bazarr_movies_folder: "{{ movies_folder }}"
        - bazarr_tv_folder: "{{ tv_folder }}"
    - ansible-amule

- hosts: retropie
  become: true
  vars_files:
    - /vars/variables.yml
  roles:
    - ansible-cec
    - ansible-tweak-overscan
    - role: ansible-samba-mounts
      vars:
        - gid: "{{ samba_gid }}"
        - uid: "{{ samba_uid }}"
